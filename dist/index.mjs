import{curry as r,equals as n,prop as t,map as e,when as u,mergeDeepLeft as o,anyPass as c,isEmpty as i,isNil as a,all as f,complement as l,any as y,ifElse as m,includes as v,without as d,append as s,apply as p,is as A,flip as b,concat as h,pipe as g,toLower as w,replace as I,set as S,lensProp as _,both as j,head as E,always as x,pathOr as O,mergeDeepRight as R,objOf as U,last as C,hasIn as z,__ as M,join as T,reject as Z,path as $,tail as k,split as q,fromPairs as B,either as D,startsWith as F,uniq as G,mapObjIndexed as H,toPairs as J,keys as K,filter as L,trim as N,intersperse as P,prepend as Q,defaultTo as V,lensPath as W,view as X,propOr as Y,toUpper as rr}from"ramda";import nr from"react";var tr=r((function(r,e,u){return n(e,t(r,u))})),er=r((function(r,n,t){return e(u(tr(r,n[r]),o(n)),t)})),ur=c([i,a]),or=f(ur),cr=l(ur),ir=f(cr),ar=y(ur),fr=y(cr),lr=function(r,n){return m(v(r),d([r]),s(r))(n)},yr=r(r((function(r,n){return function(){for(var t=arguments.length,e=new Array(t),u=0;u<t;u++)e[u]=arguments[u];return n((function(n){return p(r,[].concat(e,[n]))}))}}))),mr=function(r){return m(A(Array),yr(b(h),r),yr(s,r))},vr=g(h("_"),w),dr=I(/^_/,""),sr=g(I(/(?:^|\.?)([A-Z])/g,vr),dr),pr=r((function(r,n,t){return S(_(n),r(t),t)})),Ar=m(j(A(Array),cr),E,x({})),br=r((function(r,n){return r.reduce((function(r,t){var e=function(r,n){return m(g(C,z(M,r)),T("_"),C)(n)}(r,t),u=O(null,t,n);return R(r,U(e,u))}),{})})),hr=Z(a),gr=g($(["location","search"]),k,q("&"),e(q("=")),B,hr,e(decodeURI)),wr=D(F("?"),i),Ir=g($(["location","pathname"]),q("/"),k,Z(wr)),Sr=r((function(r,n){return g(e(t(r)),G,Z(ur))(n)})),_r=l(i),jr=u(_r,h("?")),Er=g(H(encodeURIComponent),J,e(T("=")),T("&"),jr);function xr(r,n){(null==n||n>r.length)&&(n=r.length);for(var t=0,e=Array(n);t<n;t++)e[t]=r[t];return e}function Or(r,n){return function(r){if(Array.isArray(r))return r}(r)||function(r,n){var t=null==r?null:"undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"];if(null!=t){var e,u,o,c,i=[],a=!0,f=!1;try{if(o=(t=t.call(r)).next,0===n);else for(;!(a=(e=o.call(t)).done)&&(i.push(e.value),i.length!==n);a=!0);}catch(r){f=!0,u=r}finally{try{if(!a&&null!=t.return&&(c=t.return(),Object(c)!==c))return}finally{if(f)throw u}}return i}}(r,n)||function(r,n){if(r){if("string"==typeof r)return xr(r,n);var t={}.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?xr(r,n):void 0}}(r,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var Rr=A(Object),Ur=function(r){return function(n){var t=Or(n,2),e=t[0],u=t[1];return function(r){return Rr(r)&&!Array.isArray(r)}(u)?[r(e),Cr(r)(u)]:[r(e),u]}},Cr=function(r){return g(J,e(Ur(r)),B)},zr=g(K,T("|"),(function(r){return new RegExp(r,"g")})),Mr=r((function(r,n){var t=zr(r);return I(t,(function(n){return r[n]}),n)})),Tr=yr(o),Zr=L(cr),$r=g(q("\n"),e(N),(function(r){return cr(r)?r:nr.createElement("br",null)}),P(nr.createElement("br",null)),Zr),kr=function(r){return m(A(Array),yr(h,r),yr(Q,r))},qr=V(null),Br=r((function(r,n){return r.reduce((function(r,t){var e=W(t),u=qr(X(e,n));return S(e,u,r)}),{})})),Dr=r((function(r,n,t){var e=R(r,t);return Br(n,e)})),Fr=r((function(r,n,t){var e=Y(n,r,n);return Z(tr(r,e),t)})),Gr=r((function(r,n,t){return yr(Fr(n,t),r)()})),Hr=function(r){return Cr((function(n){return Y(n,n,r)}))},Jr=g(I("_",""),rr),Kr=I(/([-_][a-z])/g,Jr);export{er as adjustBy,or as allAbsent,ir as allPresent,ar as anyAbsent,fr as anyPresent,lr as appendOrRemove,mr as appendState,sr as camelToSnake,pr as extend,Ar as first,br as flatPick,gr as getQueryParams,Ir as getRouteFragments,Sr as getUniqValues,ur as isAbsent,cr as isPresent,Er as makeQueryParams,Cr as mapKeys,Mr as mapReplace,Tr as mergeState,$r as nl2br,_r as notEmpty,kr as prependState,tr as propEq,Br as prune,Dr as pruneOr,Fr as removeBy,Gr as removeStateBy,Hr as renameKeys,Kr as snakeToCamel,yr as updateState};
